"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rNumber = rNumber;
exports.rNumChar = rNumChar;
exports.rChar = rChar;
exports.rNumCharSymbol = rNumCharSymbol;

var maxLength = function maxLength() {
    return 20;
};

var randomNumberGenerator = function randomNumberGenerator(length) {
    if (length > maxLength()) {
        length = maxLength();
    }
    return Math.floor(Math.pow(10, length - 1) + Math.random() * 9 * Math.pow(10, length - 1));
};

var randomNumberCharacterGenerator = function randomNumberCharacterGenerator(length) {
    var possibleNumbers = "0123456789";
    var possibleLetters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    var possibleSymbols = "~!@#$%^&*()+=?<>{}[]";
    var possibleNumCharCharacters = randomNumberChooser === "rChar" ? "" + possibleLetters + possibleLetters.toLowerCase() : "" + possibleLetters + possibleLetters.toLowerCase() + possibleNumbers;

    if (randomNumberChooser === "rChar") {
        possibleNumCharCharacters = "" + possibleLetters + possibleLetters.toLowerCase();
    } else if (randomNumberChooser === "rNumCharSymbol") {
        possibleNumCharCharacters = "" + possibleLetters + possibleLetters.toLowerCase() + possibleSymbols + possibleNumbers;
    } else {
        possibleNumCharCharacters = "" + possibleLetters + possibleLetters.toLowerCase() + possibleNumbers;
    }
    var text = "";

    for (var i = 0; i < length; i++) {
        text += possibleNumCharCharacters.charAt(Math.floor(Math.random() * possibleNumCharCharacters.length));
    }
    return text;
};

var randomNumberChooser = null;

var decideRandomValueTransformation = function decideRandomValueTransformation(argumentsObj) {
    var segmentLength = argumentsObj.length;
    var finalNumber = "";

    if (segmentLength === 1) {

        switch (randomNumberChooser) {
            case "rNumber":
                return randomNumberGenerator(argumentsObj[0]);
            case 'rNumChar':
                return randomNumberCharacterGenerator(argumentsObj[0]);
            case 'rNumCharSymbol':
                return randomNumberCharacterGenerator(argumentsObj[0]);
            default:
                return randomNumberCharacterGenerator(argumentsObj[0]);
        }
    }

    for (var i = 0; i < segmentLength; i++) {
        finalNumber += "-" + (randomNumberChooser === "rNumber" ? randomNumberGenerator(argumentsObj[i]) : randomNumberCharacterGenerator(argumentsObj[i]));
    }
    return finalNumber.substr(1);
};

function rNumber() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
    }

    var passedArguments = arguments;
    randomNumberChooser = "rNumber";
    return decideRandomValueTransformation(passedArguments);
}

function rNumChar() {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
    }

    var passedArguments = arguments;
    randomNumberChooser = "rNumChar";
    return decideRandomValueTransformation(passedArguments);
}

function rChar() {
    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
    }

    var passedArguments = arguments;
    randomNumberChooser = "rChar";
    return decideRandomValueTransformation(passedArguments);
}

function rNumCharSymbol() {
    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
    }

    var passedArguments = arguments;
    randomNumberChooser = "rNumCharSymbol";
    return decideRandomValueTransformation(passedArguments);
}